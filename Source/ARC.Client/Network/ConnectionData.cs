using System;

using ACE.Common.Cryptography;
using ACE.Server.Network.Sequence;

namespace ARC.Client.Network;

public class ConnectionData
{
    /// <summary>
    /// A random 64-bit secret generated by and shared with the server. Transmitted as clear-text
    /// S2C in the ConnectRequest packet, and sent C2S in the ConnectReponse packet.
    /// </summary>
    /// <see cref="ACE.Server.Network.SessionConnectionData.ConnectionCookie"/>
    public ulong ConnectionCookie { get; private set; }

    /// <summary>
    /// The ID of this client, as assigned by the server.
    /// </summary>
    public ushort ClientId { get; private set; }

    /// <summary>
    /// A random 32-bit secret generated by and shared with the server. Used to initialize the C2S
    /// CRC stream cipher. Transmitted as clear-text S2C during the three-way handshake.
    /// </summary>
    public byte[] ClientSeed { get; private set; }
    /// <summary>
    /// A random 32-bit secret generated by and shared with the server. Used to initialize the S2C
    /// CRC stream cipher. Transmitted as clear-text S2C during the three-way handshake.
    /// </summary>
    public byte[] ServerSeed { get; private set; }

    public UIntSequence PacketSequence = new(0);
    public UIntSequence FragmentSequence = new(0);

    public CryptoSystem ServerCryptoVerifier;
    public ISAAC ClientPacketEncrypter;

    public ConnectionData(ulong ConnectionCookie, ushort ClientId, byte[] ServerSeed, byte[] ClientSeed)
    {
        this.ConnectionCookie = ConnectionCookie;
        this.ClientId = ClientId;
        this.ServerSeed = ServerSeed;
        this.ClientSeed = ClientSeed;

        ServerCryptoVerifier = new CryptoSystem(ServerSeed);
        ClientPacketEncrypter = new ISAAC(ClientSeed);
    }

    public override string ToString()
    {
        return $"Seeds: [Client {BitConverter.ToString(ClientSeed).Replace("-","")}, Server {BitConverter.ToString(ServerSeed).Replace("-", "")}]";
    }
}
